"use strict";
self["webpackHotUpdatewro_fer_w_22_es6_react_podstawy"](0,{

/***/ 25:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* abstract */
class Calculator {
  constructor(selectorName) {
    this.name = selectorName;
    this.$calculatorDOMElement = document.querySelector(selectorName);
    this.firstNumberArray = [];
    this.secondNumberArray = [];
    this.resultNumberArray = [0, 0, 0, 0, 0, 0, 0, 0, 0];
    this.initEvents();
  }

  /* Abstract method add numbers in two array
   *  @param {array} numberX First number
   *  @param {array} numberY Second number
   *  @return {array}
   */
  add(numberX, numberY) {
    console.error("Powinienes zaimplementować tę metodę w klasie dziedziczącej.");
    return [0, 0, 0, 0, 0, 0, 0, 0];
  }

  /* Abstract method changing number
   *  @param {jQuery element} root Parent element
   */
  changeNumber(root) {
    console.error("Powinieneś zaimplementować tę metodę w klasie dziedziczącej. ");
  }

  /* Method changing Result
   */
  updateResult() {
    const results = this.$calculatorDOMElement.querySelectorAll(".result-bit span");
    this.resultNumberArray.reverse().forEach((number, i) => {
      results[i].innerText = number;
    });
  }

  /* Check what number is set in both numbers and add
   *  @return {string}
   */
  checkNumber() {
    let root = this.$calculatorDOMElement;
    let $firstNumber = root.querySelectorAll(".group-number label:first-child");
    let $secondNumber = root.querySelectorAll(".group-number label:nth-child(2)");
    let $resultNumber = root.querySelectorAll(".group-number .result-bit");
    for (let i = $firstNumber.length - 1, j = 0; i >= 0; i--, j++) {
      if (this.firstNumberArray[i].length > 1) {
        alert("Zła liczba!");
      }
      this.firstNumberArray[i] = parseInt($firstNumber[j].firstElementChild.innerText);
      this.secondNumberArray[i] = parseInt($secondNumber[j].firstElementChild.innerText);
      this.resultNumberArray[i] = parseInt($resultNumber[j].firstElementChild.innerText);
    }
    this.resultNumberArray = this.add(this.firstNumberArray, this.secondNumberArray);
  }

  /* Set event click on number
   */
  initEvents() {
    this.$calculatorDOMElement.addEventListener("click", event => {
      if (event.target.parentElement.classList.contains("display-number")) {
        const parentLabel = event.target.parentElement;
        this.changeNumber(parentLabel);
      }
    });
  }
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Calculator);

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("692fa562c45321de0313")
/******/ })();
/******/ 
/******/ }
);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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VCxTQUFTLENBQUM7SUFDcEY7SUFFQSxJQUFJLENBQUNoQixpQkFBaUIsR0FBRyxJQUFJLENBQUNFLEdBQUcsQ0FDL0IsSUFBSSxDQUFDSixnQkFBZ0IsRUFDckIsSUFBSSxDQUFDQyxpQkFBaUIsQ0FDdkI7RUFDSDs7RUFFQTtBQUNGO0VBQ0VFLFVBQVUsR0FBRztJQUNYLElBQUksQ0FBQ04scUJBQXFCLENBQUMrQixnQkFBZ0IsQ0FBQyxPQUFPLEVBQUVDLEtBQUssSUFBSTtNQUM1RCxJQUFJQSxLQUFLLENBQUNDLE1BQU0sQ0FBQ0MsYUFBYSxDQUFDQyxTQUFTLENBQUNDLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyxFQUFFO1FBQ25FLE1BQU1DLFdBQVcsR0FBR0wsS0FBSyxDQUFDQyxNQUFNLENBQUNDLGFBQWE7UUFDOUMsSUFBSSxDQUFDdEIsWUFBWSxDQUFDeUIsV0FBVyxDQUFDO01BQ2hDO0lBQ0YsQ0FBQyxDQUFDO0VBQ0o7QUFDRjtBQUVBLGlFQUFlekMsVUFBVTs7Ozs7Ozs7VUNsRnpCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd3JvX2Zlcl93XzIyX2VzNl9yZWFjdF9wb2RzdGF3eS8uL0NhbGMvanMvQ2FsY3VsYXRvci5qcyIsIndlYnBhY2s6Ly93cm9fZmVyX3dfMjJfZXM2X3JlYWN0X3BvZHN0YXd5L3dlYnBhY2svcnVudGltZS9nZXRGdWxsSGFzaCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBhYnN0cmFjdCAqL1xuY2xhc3MgQ2FsY3VsYXRvciB7XG4gIGNvbnN0cnVjdG9yKHNlbGVjdG9yTmFtZSkge1xuICAgIHRoaXMubmFtZSA9IHNlbGVjdG9yTmFtZTtcbiAgICB0aGlzLiRjYWxjdWxhdG9yRE9NRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3JOYW1lKTtcblxuICAgIHRoaXMuZmlyc3ROdW1iZXJBcnJheSA9IFtdO1xuICAgIHRoaXMuc2Vjb25kTnVtYmVyQXJyYXkgPSBbXTtcbiAgICB0aGlzLnJlc3VsdE51bWJlckFycmF5ID0gWzAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDBdO1xuICAgIHRoaXMuaW5pdEV2ZW50cygpO1xuICB9XG5cbiAgLyogQWJzdHJhY3QgbWV0aG9kIGFkZCBudW1iZXJzIGluIHR3byBhcnJheVxuICAgKiAgQHBhcmFtIHthcnJheX0gbnVtYmVyWCBGaXJzdCBudW1iZXJcbiAgICogIEBwYXJhbSB7YXJyYXl9IG51bWJlclkgU2Vjb25kIG51bWJlclxuICAgKiAgQHJldHVybiB7YXJyYXl9XG4gICAqL1xuICBhZGQobnVtYmVyWCwgbnVtYmVyWSkge1xuICAgIGNvbnNvbGUuZXJyb3IoXG4gICAgICBcIlBvd2luaWVuZXMgemFpbXBsZW1lbnRvd2HEhyB0xJkgbWV0b2TEmSB3IGtsYXNpZSBkemllZHppY3rEhWNlai5cIlxuICAgICk7XG4gICAgcmV0dXJuIFswLCAwLCAwLCAwLCAwLCAwLCAwLCAwXTtcbiAgfVxuXG4gIC8qIEFic3RyYWN0IG1ldGhvZCBjaGFuZ2luZyBudW1iZXJcbiAgICogIEBwYXJhbSB7alF1ZXJ5IGVsZW1lbnR9IHJvb3QgUGFyZW50IGVsZW1lbnRcbiAgICovXG4gIGNoYW5nZU51bWJlcihyb290KSB7XG4gICAgY29uc29sZS5lcnJvcihcbiAgICAgIFwiUG93aW5pZW5lxZvCmyB6YWltcGxlbWVudG93YcSHIHTEmcKFIG1ldG9kxJnCmSB3IGtsYXNpZSBkemllZHppY3rEhWNlai4gXCJcbiAgICApO1xuICB9XG5cbiAgLyogTWV0aG9kIGNoYW5naW5nIFJlc3VsdFxuICAgKi9cbiAgdXBkYXRlUmVzdWx0KCkge1xuICAgIGNvbnN0IHJlc3VsdHMgPSB0aGlzLiRjYWxjdWxhdG9yRE9NRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKFxuICAgICAgXCIucmVzdWx0LWJpdCBzcGFuXCJcbiAgICApO1xuICAgIHRoaXMucmVzdWx0TnVtYmVyQXJyYXkucmV2ZXJzZSgpLmZvckVhY2goKG51bWJlciwgaSkgPT4ge1xuICAgICAgcmVzdWx0c1tpXS5pbm5lclRleHQgPSBudW1iZXI7XG4gICAgfSk7XG4gIH1cblxuICAvKiBDaGVjayB3aGF0IG51bWJlciBpcyBzZXQgaW4gYm90aCBudW1iZXJzIGFuZCBhZGRcbiAgICogIEByZXR1cm4ge3N0cmluZ31cbiAgICovXG4gIGNoZWNrTnVtYmVyKCkge1xuICAgIGxldCByb290ID0gdGhpcy4kY2FsY3VsYXRvckRPTUVsZW1lbnQ7XG4gICAgbGV0ICRmaXJzdE51bWJlciA9IHJvb3QucXVlcnlTZWxlY3RvckFsbChcIi5ncm91cC1udW1iZXIgbGFiZWw6Zmlyc3QtY2hpbGRcIik7XG4gICAgbGV0ICRzZWNvbmROdW1iZXIgPSByb290LnF1ZXJ5U2VsZWN0b3JBbGwoXG4gICAgICBcIi5ncm91cC1udW1iZXIgbGFiZWw6bnRoLWNoaWxkKDIpXCJcbiAgICApO1xuICAgIGxldCAkcmVzdWx0TnVtYmVyID0gcm9vdC5xdWVyeVNlbGVjdG9yQWxsKFwiLmdyb3VwLW51bWJlciAucmVzdWx0LWJpdFwiKTtcblxuICAgIGZvciAobGV0IGkgPSAkZmlyc3ROdW1iZXIubGVuZ3RoIC0gMSwgaiA9IDA7IGkgPj0gMDsgaS0tLCBqKyspIHtcbiAgICAgIGlmICh0aGlzLmZpcnN0TnVtYmVyQXJyYXlbaV0ubGVuZ3RoID4gMSkge1xuICAgICAgICBhbGVydChcIlrFgmEgbGljemJhIVwiKVxuICAgICAgfVxuICAgICAgdGhpcy5maXJzdE51bWJlckFycmF5W2ldID0gcGFyc2VJbnQoJGZpcnN0TnVtYmVyW2pdLmZpcnN0RWxlbWVudENoaWxkLmlubmVyVGV4dCk7XG4gICAgICB0aGlzLnNlY29uZE51bWJlckFycmF5W2ldID0gcGFyc2VJbnQoJHNlY29uZE51bWJlcltqXS5maXJzdEVsZW1lbnRDaGlsZC5pbm5lclRleHQpO1xuICAgICAgdGhpcy5yZXN1bHROdW1iZXJBcnJheVtpXSA9IHBhcnNlSW50KCRyZXN1bHROdW1iZXJbal0uZmlyc3RFbGVtZW50Q2hpbGQuaW5uZXJUZXh0KTtcbiAgICB9XG5cbiAgICB0aGlzLnJlc3VsdE51bWJlckFycmF5ID0gdGhpcy5hZGQoXG4gICAgICB0aGlzLmZpcnN0TnVtYmVyQXJyYXksXG4gICAgICB0aGlzLnNlY29uZE51bWJlckFycmF5XG4gICAgKTtcbiAgfVxuXG4gIC8qIFNldCBldmVudCBjbGljayBvbiBudW1iZXJcbiAgICovXG4gIGluaXRFdmVudHMoKSB7XG4gICAgdGhpcy4kY2FsY3VsYXRvckRPTUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGV2ZW50ID0+IHtcbiAgICAgIGlmIChldmVudC50YXJnZXQucGFyZW50RWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoXCJkaXNwbGF5LW51bWJlclwiKSkge1xuICAgICAgICBjb25zdCBwYXJlbnRMYWJlbCA9IGV2ZW50LnRhcmdldC5wYXJlbnRFbGVtZW50O1xuICAgICAgICB0aGlzLmNoYW5nZU51bWJlcihwYXJlbnRMYWJlbCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgQ2FsY3VsYXRvcjtcbiIsIl9fd2VicGFja19yZXF1aXJlX18uaCA9ICgpID0+IChcIjY5MmZhNTYyYzQ1MzIxZGUwMzEzXCIpIl0sIm5hbWVzIjpbIkNhbGN1bGF0b3IiLCJjb25zdHJ1Y3RvciIsInNlbGVjdG9yTmFtZSIsIm5hbWUiLCIkY2FsY3VsYXRvckRPTUVsZW1lbnQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJmaXJzdE51bWJlckFycmF5Iiwic2Vjb25kTnVtYmVyQXJyYXkiLCJyZXN1bHROdW1iZXJBcnJheSIsImluaXRFdmVudHMiLCJhZGQiLCJudW1iZXJYIiwibnVtYmVyWSIsImNvbnNvbGUiLCJlcnJvciIsImNoYW5nZU51bWJlciIsInJvb3QiLCJ1cGRhdGVSZXN1bHQiLCJyZXN1bHRzIiwicXVlcnlTZWxlY3RvckFsbCIsInJldmVyc2UiLCJmb3JFYWNoIiwibnVtYmVyIiwiaSIsImlubmVyVGV4dCIsImNoZWNrTnVtYmVyIiwiJGZpcnN0TnVtYmVyIiwiJHNlY29uZE51bWJlciIsIiRyZXN1bHROdW1iZXIiLCJsZW5ndGgiLCJqIiwiYWxlcnQiLCJwYXJzZUludCIsImZpcnN0RWxlbWVudENoaWxkIiwiYWRkRXZlbnRMaXN0ZW5lciIsImV2ZW50IiwidGFyZ2V0IiwicGFyZW50RWxlbWVudCIsImNsYXNzTGlzdCIsImNvbnRhaW5zIiwicGFyZW50TGFiZWwiXSwic291cmNlUm9vdCI6IiJ9